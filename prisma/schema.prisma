generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id        String      @id @default(uuid())
  name      String      @db.VarChar(40)
  username  String      @unique @db.VarChar(100)
  email     String      @unique @db.VarChar(40)
  role      Role        @default(USER)
  password  String      @db.VarChar(100)
  campaigns Campaign[]
  templates Template[]
  Component Component[]

  @@index([id])
}

model Template {
  id        String     @id @default(uuid())
  title     String
  userId    String
  campaigns Campaign[]
  sections  Section[]
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([id])
  @@index([userId])
}

model Campaign {
  id         String   @id @default(uuid())
  title      String
  data       Json
  templateId String
  userId     String
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  layout     Layout[]

  @@index([id])
  @@index([templateId])
}

model Layout {
  id         String   @id @default(uuid())
  order      Int
  sectionId  String
  campaignId String
  renderOn   Json
  is_active  Boolean
  campaign   Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  section    Section  @relation(fields: [sectionId], references: [id], onDelete: Cascade)

  @@index([id])
  @@index([campaignId])
  @@index([sectionId])
}

model Section {
  id           String               @id @default(uuid())
  title        String
  content      String
  templateId   String
  order        Int
  Layout       Layout[]
  template     Template             @relation(fields: [templateId], references: [id], onDelete: Cascade)
  placeholders SectionPlaceholder[]

  @@index([id])
  @@index([templateId])
}

model Component {
  id           String                 @id @default(uuid())
  title        String
  content      String
  placeholders ComponentPlaceholder[]
  userId       String
  user         User                   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([id])
}

model ComponentPlaceholder {
  id          String    @id @default(uuid())
  title       String
  fallback    String
  componentId String
  component   Component @relation(fields: [componentId], references: [id], onDelete: Cascade)

  @@index([id])
  @@index([componentId])
}

model SectionPlaceholder {
  id        String  @id @default(uuid())
  title     String
  fallback  String
  sectionId String
  section   Section @relation(fields: [sectionId], references: [id], onDelete: Cascade)

  @@index([id])
  @@index([sectionId])
}

enum Role {
  GUEST
  USER
  ADMIN
  DEVELOPER
  PROJECT_MANAGER
}
